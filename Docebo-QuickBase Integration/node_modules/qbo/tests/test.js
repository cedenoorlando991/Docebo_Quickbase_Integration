let {QBOFactory} = require('../dist/qbo.cjs');

let QBO = new QBOFactory();
QBO.application_url = "https://qbs.quickbase.com/db/biuj6e6iv";
Object.assign(QBO, require('../credentials/qb'));

class Amount {
}

QBO.record_class_init(Amount);
Amount.alias = "_DBID_AMOUNTS";
Amount.db_map = [
    {fid: "3", name: "rid"},
    {fid: "2", name: "modified_at", readonly: true},
    {fid: "21", name: "amount"},
    {fid: "9", name: "date"},
    {fid: "20", name: "date_formula", readonly: true},
    {fid: "33", name: "amount_type", readonly: true},
    {fid: "13", name: "invoice_rid"},
    {fid: "15", name: "invoice_name", readonly: true},
    {fid: "34", name: "file", readonly: true, convert: QBO.to_file_arr},
    {is_fake: true, name: "fake"},
];
Amount.save_opt = {msInUTC: 1};

async function run() {
    try {
        console.log("\nTest Amount.query");
        Amount.load_method = "query";
        Amount.query_opt = {query: {rid: 37}, fmt: "structured", slist:['date']};
        await Amount.load_records();
        console.log(Amount.records);

        console.log("\nTest Amount.save");
        const num = new Date().getTime();
        console.log('Date = '+num)
        let amount = Object.assign(new Amount(), {
            amount: "0.01",
            invoice_rid: "8",
            date: num,
            fake: "abc"
        });
        Amount.records = [amount];
        await Amount.save_records();
        Amount.query_opt = {query: {rid: Amount.records[0].rid}, fmt: "structured"};
        await Amount.load_records();
        console.log(Amount.records)

        console.log("\nTest amount.save with auto_clist_output on");
        QBO.auto_clist_output = true;
        amount.amount = "0.02";
        await amount.save({msInUTC: "1"});
        console.log(Amount.records);

        console.log("\nTest amount.add_record");
        const new_amount = new Amount();
        new_amount.amount = "0.33";
        await new_amount.add_record();
        console.log(new_amount);

        console.log("\nTest Amount.get");
        Amount.query_opt = {query: {rid: Amount.records[0].rid}};
        await Amount.load_records();
        console.log(Amount.records);

        Amount.records.push(new_amount);

        console.log("\nTest Amount.destroy");
        await QBO.destroy(Amount.records);
        console.log(Amount.records);

        console.log("\nTest QBO.get_users");
        console.log(JSON.stringify(await QBO.get_users()));

        console.log("\nTest QBO.get_user_roles");
        console.log(JSON.stringify(await QBO.get_user_roles()));

        console.log("\nTest QBO.get_user_info");
        console.log(JSON.stringify(await QBO.get_user_info()));

        console.log("\nTest Klass.set_schema_fields");
        await Amount.set_schema_fields();
        console.log(JSON.stringify(Amount.db_map));

        console.log("\nTest QBO.get_schema");
        const schema = await QBO.get_schema();
        console.log(JSON.stringify(schema));
    } catch (err) {
        console.log(err);
    }
}

run();
